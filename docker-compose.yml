version: "3"
services:
  traefik:
    image: traefik:v2.9
    container_name: traefik
    restart: unless-stopped
    command:
      - "--configFile=/traefik.yaml"
    ports:
      - 443:443
      - 80:80
    networks:
      - traefik
    volumes:
      - ./traefik.yaml:/traefik.yaml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=access-auth"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

  cache:
    image: redis:6
    networks:
      - traefik

  directus:
    image: directus/directus:10.10.5
    networks:
      - traefik
    ports:
      - 8055:8055
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    depends_on:
      - cache
    env_file:
      - .env.management
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.customer.rule=Host(`customer.st-ingenieurteam.de`)"
      - "traefik.http.routers.customer.entrypoints=websecure"
      - "traefik.http.services.customer.loadbalancer.server.port=8055"
      - "traefik.http.routers.customer.service=customer"
      - "traefik.http.routers.customer.tls.certresolver=letsencrypt"

  strapi:
    container_name: strapi
    image: strapi/strapi
    networks:
      - traefik
      - strapi
    env_file:
      - .env.strapi
    ports:
      - 1337:1337
    volumes:
      - ./app:/srv/app
    depends_on:
      - db
    command: 'strapi start'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cms.rule=Host(`cms.st-ingenieurteam.de`)"
      - "traefik.http.routers.cms.entrypoints=websecure"
      - "traefik.http.services.cms.loadbalancer.server.port=8055"
      - "traefik.http.routers.cms.service=cms"
      - "traefik.http.routers.cms.tls.certresolver=letsencrypt"

  db:
    container_name: postgres
    image: postgres
    networks:
      - traefik
      - strapi
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - .env.strapi      

networks:
  traefik:
    external: true
  strapi:
    external: true

volumes:
  certs: